@*@model IEnumerable<TikTokCalendar.Models.CalendarEvent>*@
@*@model IEnumerable<IEnumerable<TikTokCalendar.Models.CalendarEvent>>*@
@*@model IEnumerable<TikTokCalendar.DAL.EventMonth>*@
@model TikTokCalendar.DAL.ModelDataWrapper

@{
    //ViewBag.Title = "TikTok";
    //ViewBag.Title = Model.ToString();
    Random rng = new Random();
}

    <!-- The navbar with the tiktok logo  -->
    <header>
        <i class="fa fa-calendar-check-o"></i>
        <p>tiktok (User: @Model.user.UserName)</p>

        <a class="fa fa-sign-in login-button" href="#" data-toggle="modal" data-target="#logginn-vindu">
        </a>

    </header>

    <!-- Holds global settings and spans the entire page   -->
    <main>

        <!-- tooltip hover plugin initialization -->
        <script type="text/javascript">
            jQuery(function () {
                jQuery('.activator.tip-specific-class').BAToolTip({
                    tipOpacity: 0.9,
                    tipOffset: 20
                });
            })
        </script>

        <div class="main-body">
            
                @foreach (var month in Model.calEvents)
                {
                    if (month.Events.Count <= 0)
                    {
                        continue;
                    }

                <!-- Displays the month name -->
                    <div class="feed-month">
                        <p class="month">@month.GetMonthName()</p>  <!-- August -->
                    </div>

                    <!-- Container for an entire month of events -->
                    <div class="feed">

                        @foreach (var item in month.Events)
                        {
                            <div class="feed-container">

                                
                                <!-- Container for the event content -->
                                <div class="content">

                                    <!-- add this to toggle: data-toggle="collapse" data-target="#@item.ID" -->
                                    <!-- Container for the top row -->
                                    <div class="class-info">
                                        <div class="class-date">
                                            <p class="date-number">@item.StartTime.Day</p>  <!-- 17 -->
                                        </div>
                                        <!-- tooltip hover extravaganza -->
                                        <div class="tip-item">
                                            <p class="name activator tip-specific-class">@item.Subject.Name</p>  <!-- "Grensesnittdesign" -->

                                            @{ 
                                                string timeLeft = "";
                                                if (item.StartTime > DateTime.Now)
                                                {
                                                    if (item.StartTime < DateTime.Now.AddYears(2))
                                                    {
                                                        if (item.StartTime < DateTime.Now.AddYears(1))
                                                        {
                                                            if (item.StartTime < DateTime.Now.AddMonths(1))
                                                            {
                                                                if (item.StartTime < DateTime.Now.AddDays(14))
                                                                {
                                                                    if (item.StartTime < DateTime.Now.AddDays(1))
                                                                    {
                                                                        if (item.StartTime < DateTime.Now.AddHours(1))
                                                                        {
                                                                            if (item.StartTime < DateTime.Now.AddMinutes(1))
                                                                            {
                                                                                timeLeft = "Teller ned: " + (int)(item.StartTime - DateTime.Now).TotalSeconds;
                                                                            }
                                                                            else
                                                                            {
                                                                                int mins = (int)(item.StartTime - DateTime.Now).TotalMinutes;
                                                                                timeLeft = "" + mins;
                                                                                if (mins > 1)
                                                                                {
                                                                                    timeLeft += " minutter til";
                                                                                }
                                                                                else
                                                                                {
                                                                                    timeLeft += " minutt til";
                                                                                }
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            int hours = (int)(item.StartTime - DateTime.Now).TotalHours;
                                                                            timeLeft = "" + hours;
                                                                            if (hours > 1)
                                                                            {
                                                                                timeLeft += " timer til";
                                                                            }
                                                                            else
                                                                            {
                                                                                timeLeft += " time til";
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        int days = (int)(item.StartTime - DateTime.Now).TotalDays;
                                                                        timeLeft = "" + days;
                                                                        if (days > 1)
                                                                        {
                                                                            timeLeft += " dager til";
                                                                        }
                                                                        else
                                                                        {
                                                                            timeLeft += " dag til";
                                                                        }

                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    int weeks = (int)(item.StartTime - DateTime.Now).TotalDays / 7;
                                                                    timeLeft = "" + weeks + " uker til";
                                                                }
                                                            }
                                                            else
                                                            {
                                                                int months = ((item.StartTime.Year - DateTime.Now.Year) * 12 + item.StartTime.Month - DateTime.Now.Month);
                                                                timeLeft = "" + months;
                                                                if (months > 1)
                                                                {
                                                                    timeLeft += " måneder til";
                                                                }
                                                                else
                                                                {
                                                                    timeLeft += " måned til";
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            timeLeft = "Over et år til";
                                                        }
                                                    }
                                                    else
                                                    {
                                                        timeLeft = "Mange år til";
                                                    }
                                                }
                                                else
                                                {
                                                    switch (rng.Next(6))
                                                    {
                                                        case 0:
                                                            timeLeft = "Don't judge yourself by your past. You don't live there anymore.";
                                                            break;
                                                        case 1:
                                                            timeLeft = "You can't start the next chapter of your life if you keep re-reading the last one.";
                                                            break;
                                                        case 2:
                                                            timeLeft = "When your past calls don't answer. It has nothing new to say";
                                                            break;
                                                        case 3:
                                                            timeLeft = "Leave the past where it belongs. Don't look back when you know you shouldn't.";
                                                            break;
                                                        case 4:
                                                            timeLeft = "The best thing about the past is that it shows you what not to bring into the future.";
                                                            break;
                                                        case 5:
                                                            timeLeft = "Oh yes, the past can hurt. But you can either run from it or, learn from it.";
                                                            break;
                                                    }

                                                }
                                            }

                                            <div class="tip tip-specific-class">@timeLeft</div>
                                        </div>
                                        <div class="right-position">
                                            <p class="room">@item.RoomName</p>  <!-- "Rom 41" -->
                                        </div>
                                    </div>

                                    <!-- Container for bottom row -->
                                    <div class="time-info">
                                        <div class="left-position">

                                            <!-- Date and time  -->
                                            <p class="time"><strong>&nbsp;@item.GetDayOfWeek()</strong>, @item.GetTimeSlot()</p>
                                        </div>

                                        <!-- Icon displaying "..."  -->
                                        <i class="fa fa-ellipsis-h fa-2x"></i>
                                    </div>
                                </div>

                                <div class="horizontal-line"></div>
                        </div>
                        }
                 </div>
                }
         </div>
 </main>